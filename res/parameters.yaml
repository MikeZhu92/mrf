# Distance weight
kd: 1

# Smoothness weight (within discontinuity threshold)
ks: 1

# Normal distance weight
kn: 1

# Smoothness weighting type
# Available options: none, step, linear, exponential
smoothness_weighting: step

# Threshold at which smoothness weighting starts to decrease
discontinuity_threshold: 0.03

# Decrease rate of smoothness weighting
smoothness_rate: 2.5
smoothness_weight_min: 1e-5

# Whether normal estimation is performed as a preprocessing step
# This parameter can be set to false if normals are not needed or provided
# otherwise
estimate_normals: true

# Radius in which the normal estimation is performed
radius_normal_estimation: 0.5

# Number of neighbors to search for during initialization
neighbor_search: 10

# Depth limits that constrain the optimization
# Available options: none, custom, adaptive
limits: adaptive
custom_depth_limit_min: 0
custom_depth_limit_max: 1

# Available options: none, nearest_neighbor, triangles, mean_depth, weighted_neighbor
initialization: triangles

# Neighborhood for each pixel to consider
# Available options: two, four, eight
neighborhood: eight

# Box cropping mode to reduce the amount of data
# Available options: none, min_max
crop_mode: none

# Optimizer parameters
# Available options: trivial, huber, cauchy
loss_function: trivial
loss_function_scale: 0.1
max_num_iterations: 75
minimizer_progress_to_stdout: true
num_threads: 8
num_linear_solver_threads: 8
max_solver_time_in_seconds: 1200
use_inner_iterations: false
use_nonmonotonic_steps: false
function_tolerance: 1e-5

use_functor_distance: true
use_functor_normal: true
use_functor_normal_distance: true
use_functor_smoothness_normal: true
use_functor_smoothness_distance: false

pin_normals: false
pin_distances: false

estimate_covariances: false
use_covariance_filter: true
covariance_filter_treshold: 2
